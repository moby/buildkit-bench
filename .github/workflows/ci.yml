name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:

env:
  SETUP_BUILDX_VERSION: latest
  SETUP_BUILDKIT_IMAGE: moby/buildkit:latest
  BUILDKIT_REPO: moby/buildkit
  BUILDKIT_ARTIFACT_KEY: buildkit-binaries

jobs:
  # limitation to using envs in a reusable workflow input
  # https://github.com/actions/runner/issues/2372
  get-env:
    runs-on: ubuntu-24.04
    outputs:
      BUILDKIT_REPO: ${{ env.BUILDKIT_REPO }}
      BUILDKIT_ARTIFACT_KEY: ${{ env.BUILDKIT_ARTIFACT_KEY }}
    steps:
      - run: "true"

  prepare:
    runs-on: ubuntu-24.04
    outputs:
      includes: ${{ steps.set.outputs.includes }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Set includes
        id: set
        run: |
          go run -mod=vendor ./cmd/gotestmetrics \
            --debug list --gha-output includes

  buildkit-binaries:
    uses: ./.github/workflows/.buildkit-binaries.yml
    needs:
      - get-env
    secrets: inherit
    with:
      repo: ${{ needs.get-env.outputs.BUILDKIT_REPO }}
      refs: master
      last_days: 7
      last_releases: 3
      artifact_key: ${{ needs.get-env.outputs.BUILDKIT_ARTIFACT_KEY }}

  test:
    runs-on: ubuntu-24.04
    needs:
      - prepare
      - buildkit-binaries
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.includes) }}
    env:
      TEST_FLAGS: -v --timeout=30m
      TEST_IMAGE_BUILD: 0
      TEST_IMAGE_ID: buildkit-bench
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: /tmp/buildkit-binaries
          pattern: ${{ env.BUILDKIT_ARTIFACT_KEY }}-*
          merge-multiple: true
      -
        name: Extract binaries
        run: |
          mkdir -p ./bin/buildkit-binaries
          for f in "/tmp/buildkit-binaries"/*.tar.gz; do
            (set -x ; tar -xzvf "$f" -C ./bin/buildkit-binaries)
          done
          tree -nph ./bin/buildkit-binaries
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.SETUP_BUILDX_VERSION }}
          driver-opts: image=${{ env.SETUP_BUILDKIT_IMAGE }}
          buildkitd-flags: --debug
      -
        name: Build test image
        uses: docker/bake-action@v5
        with:
          targets: tests
          provenance: false
          set: |
            *.contexts.buildkit-binaries=./bin/buildkit-binaries
            *.output=type=docker,name=${{ env.TEST_IMAGE_ID }}
      -
        name: Test
        run: |
          ./hack/test
        env:
          TEST_FLAGS: -bench=${{ matrix.test }} ${{ env.TEST_FLAGS }}
          TEST_BENCH_RUN: ${{ matrix.count }}
          TEST_BENCH_TIME: ${{ matrix.benchtime }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Result
        run: |
          resultName=$(echo ${{ matrix.test }} | sed 's/\//-/g')
          resultPath=./bin/gotestoutput-$resultName.json
          echo "TEST_RESULT_NAME=$resultName" >> $GITHUB_ENV
          echo "TEST_RESULT_PATH=$resultPath" >> $GITHUB_ENV
          mv ./bin/gotestoutput.json $resultPath
          jq . $resultPath
      -
        name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: bench-results-${{ env.TEST_RESULT_NAME }}
          path: ${{ env.TEST_RESULT_PATH }}
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-24.04
    needs:
      - test
    steps:
      -
        name: Download results
        uses: actions/download-artifact@v4
        with:
          path: /tmp/buildkit-bench-results
          pattern: bench-results-*
          merge-multiple: true
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Merge and generate graphs
        run: |
          go run -mod=vendor ./cmd/gotestmetrics \
            --debug merge --format html --output ./bin/results /tmp/buildkit-bench-results \
      -
        name: Publish
        uses: crazy-max/ghaction-github-pages@v4
        if: github.event_name != 'pull_request'
        with:
          target_branch: gh-pages
          build_dir: ./bin/results
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
