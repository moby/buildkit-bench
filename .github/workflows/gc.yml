name: gc

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 3 * * 6' # every Saturday at 3:00 UTC
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - .github/workflows/gc.yml
  pull_request:
    paths:
      - .github/workflows/gc.yml

env:
  WEBSITE_PUBLIC_PATH: /buildkit-bench/

jobs:
  gc:
    runs-on: ubuntu-24.04
    steps:
      -
        name: Free disk space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: bin/gh-pages
      -
        name: Garbage collect old results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const keepResultsPerDay = 1;

            const resultDir = './bin/gh-pages/result';
            const results = fs.readdirSync(resultDir).filter(d => {
              return fs.statSync(path.join(resultDir, d)).isDirectory();
            });

            const resultsByDate = results.reduce((acc, dir) => {
              const date = dir.split('-')[0];
              if (!acc[date]) {
                acc[date] = [];
              }
              acc[date].push(dir);
              return acc;
            }, {});

            Object.keys(resultsByDate).forEach(date => {
              const dirs = resultsByDate[date];
              const removeDirs = [];
              dirs.forEach(dir => {
                const envFilePath = path.join(resultDir, dir, 'env.txt');
                if (fs.existsSync(envFilePath)) {
                  const envContent = fs.readFileSync(envFilePath, 'utf8');
                  if (envContent.includes('GITHUB_EVENT_NAME=schedule')) {
                    // always keep scheduled results
                    return;
                  }
                }
                removeDirs.push(dir);
              });
              if (removeDirs.length === 0) {
                return;
              }
              removeDirs.sort().reverse();
              removeDirs.slice(keepResultsPerDay).forEach(dir => {
                const dirPath = path.join(resultDir, dir);
                fs.rmSync(dirPath, { recursive: true, force: true });
                core.info(`Removed ${dirPath}`);
              });
            });
      -
        name: Move and list results
        run: |
          mv ./bin/gh-pages/result ./website/public/
          tree -nph ./website/public/result
      -
        name: Build website
        uses: docker/bake-action@v6
        with:
          targets: website
          provenance: false
      -
        name: Publish
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: ./bin/website
          jekyll: false
          dry_run: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
